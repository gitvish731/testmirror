// perf/k6/vendor/acc.js
// Simple in-memory accumulator shared by the runner and the summary.

export const ACC = { byFeature: {}, byEndpoint: {} };

export function note(feature, endpoint, ms) {
  if (!feature) feature = "(unknown feature)";
  if (!endpoint) endpoint = "(unknown endpoint)";

  var f = ACC.byFeature[feature] || (ACC.byFeature[feature] = { count: 0, sum: 0, max: 0, vals: [] });
  var e = ACC.byEndpoint[endpoint] || (ACC.byEndpoint[endpoint] = { count: 0, sum: 0, max: 0, vals: [] });

  function add(o) {
    o.count += 1;
    o.sum += ms || 0;
    if ((ms || 0) > o.max) o.max = ms || 0;
    o.vals.push(ms || 0);
  }
  add(f); add(e);
}

export function finalize() {
  function finish(o) {
    o.avg = o.count ? Math.round((o.sum / o.count) * 100) / 100 : 0;
    if (o.vals.length) {
      o.vals.sort(function(a, b) { return a - b; });
      var idx = Math.floor(0.95 * (o.vals.length - 1));
      o.p95 = Math.round(o.vals[idx] * 100) / 100;
    } else {
      o.p95 = 0;
    }
    delete o.sum; delete o.vals;
  }
  for (var k in ACC.byFeature) { if (ACC.byFeature.hasOwnProperty(k)) finish(ACC.byFeature[k]); }
  for (var j in ACC.byEndpoint) { if (ACC.byEndpoint.hasOwnProperty(j)) finish(ACC.byEndpoint[j]); }
  return ACC;
}
